[{"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/App.js":"1","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/index.js":"2","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Algorithms.js":"3","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MultiplePointers.js":"4","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/Home.js":"5","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Navbar.js":"6","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayCircle.js":"7"},{"size":370,"mtime":1611768353980,"results":"8","hashOfConfig":"9"},{"size":215,"mtime":1611677274685,"results":"10","hashOfConfig":"9"},{"size":623,"mtime":1611762722137,"results":"11","hashOfConfig":"9"},{"size":1643,"mtime":1611777639917,"results":"12","hashOfConfig":"9"},{"size":132,"mtime":1611762712490,"results":"13","hashOfConfig":"9"},{"size":476,"mtime":1611767006054,"results":"14","hashOfConfig":"9"},{"size":353,"mtime":1611777424661,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n5k89m",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/App.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/index.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Algorithms.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MultiplePointers.js",["31"],"import React, {useState, useEffect} from 'react'\nimport ArrayCircle from './ArrayCircle'\n\nconst MultiplePointers = () => {\n\n    const [testArray, setTestArray] = useState([])\n    const [rows, setRows] = useState(1)\n\n    const resetArray = () => {\n        const array = []\n        for(let i = 0; i < randomInt(10, 50); i++){\n            array.push(randomInt(20, 75))\n        }\n        setTestArray(array)\n        const rowNum = Math.floor(array.length / 5)\n        setRows(rowNum)\n    }\n\n    const randomInt = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n\n    const findSum = (arr, total = 100) => {\n        let left = 0;\n        let right = arr.length - 1;\n        while(left < right) {\n            let sum = arr[left] + arr[right]\n            if(sum === total) {\n                 console.log([arr[left], arr[right]])\n                 return true\n            } else if(sum > 0) {\n                  right --;     \n            } else {\n                  left ++;       \n            }\n        }\n        console.log(\"false\")\n        return false\n    }\n\n    useEffect(() => {\n        resetArray()\n    }, [])\n\n    return (\n        <div>\n            <div className={`flex items-center h-64 grid grid-rows-${rows} grid-flow-col gap-8`}>\n                {testArray.map((value, index) => {\n                    return <ArrayCircle value={value} index={index} />\n                })}\n            </div>\n            <button className=\"hover:bg-gray-200 rounded-xl p-1 float-right\" onClick={() => findSum(testArray)}>\n                Run\n            </button>\n        </div>\n    )\n}\n\nexport default MultiplePointers\n","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/Home.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Navbar.js",["32"],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayCircle.js",[],{"ruleId":"33","severity":1,"message":"34","line":43,"column":8,"nodeType":"35","endLine":43,"endColumn":10,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetArray'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",{"desc":"42","fix":"43"},"Update the dependencies array to be: [resetArray]",{"range":"44","text":"45"},[1141,1143],"[resetArray]"]