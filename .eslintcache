[{"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/App.js":"1","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/index.js":"2","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Algorithms.js":"3","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MultiplePointers.js":"4","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/Home.js":"5","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Navbar.js":"6","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayCircle.js":"7","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MergeSort.js":"8","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayBar.js":"9","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/helperMethods/MergeSort.js":"10","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/helperMethods/HelperMethods.js":"11","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/QuickSort.js":"12","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/helperMethods/QuickSort.js":"13","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/BubbleSort.js":"14","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/SingleLinkedList.js":"15"},{"size":373,"mtime":1613592987000,"results":"16","hashOfConfig":"17"},{"size":186,"mtime":1612205196777,"results":"18","hashOfConfig":"17"},{"size":1172,"mtime":1613582996351,"results":"19","hashOfConfig":"17"},{"size":2423,"mtime":1612544118104,"results":"20","hashOfConfig":"17"},{"size":828,"mtime":1613489224810,"results":"21","hashOfConfig":"17"},{"size":476,"mtime":1611767006054,"results":"22","hashOfConfig":"17"},{"size":382,"mtime":1611861683724,"results":"23","hashOfConfig":"17"},{"size":2137,"mtime":1613409079841,"results":"24","hashOfConfig":"17"},{"size":282,"mtime":1613408831643,"results":"25","hashOfConfig":"17"},{"size":2600,"mtime":1612541463931,"results":"26","hashOfConfig":"17"},{"size":264,"mtime":1612974994946,"results":"27","hashOfConfig":"17"},{"size":2613,"mtime":1613410692562,"results":"28","hashOfConfig":"17"},{"size":1093,"mtime":1612974897612,"results":"29","hashOfConfig":"17"},{"size":1961,"mtime":1613489738544,"results":"30","hashOfConfig":"17"},{"size":5526,"mtime":1613923614559,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n5k89m",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/App.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/index.js",[],["69","70"],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Algorithms.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MultiplePointers.js",["71"],"import React, {useState, useEffect} from 'react'\nimport ArrayCircle from './ArrayCircle'\n\nconst MultiplePointers = () => {\n\n    const [testArray, setTestArray] = useState([])\n    const [rows, setRows] = useState(1)\n\n    const resetArray = () => {\n        const array = []\n        for(let i = 0; i < randomInt(10, 50); i++){\n            array.push(randomInt(20, 75))\n        }\n        setTestArray(array)\n        const rowNum = Math.floor(array.length / 5)\n        setRows(rowNum)\n    }\n\n    const randomInt = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n\n    const findSum = (left = 0, right = testArray.length - 1, total = 100, oldTarget1 = null, oldTarget2 = null) => {\n        \n        if(left >= testArray.length - 1){\n            return false\n        }\n\n        let sum = testArray[left] + testArray[right]\n\n        if(oldTarget1 !== null){\n            oldTarget1.style.backgroundColor = \"rgb(107, 114, 128)\"\n        }\n        if(oldTarget2 !== null){\n            oldTarget2.style.backgroundColor = \"rgb(107, 114, 128)\"\n        }\n\n        const target1 = document.getElementById(`circle-${left}`)\n        const target2 = document.getElementById(`circle-${right}`)\n\n        target1.style.backgroundColor = \"whitesmoke\"\n        target2.style.backgroundColor = \"whitesmoke\"\n\n        if(sum === total) {\n            const answer1 = document.getElementById(`circle-${left}`)\n            const answer2 = document.getElementById(`circle-${right}`)\n\n            answer1.style.backgroundColor = \"green\"\n            answer2.style.backgroundColor = \"green\"\n            return true\n        } else if(right <= left + 1){\n            setTimeout(() => findSum(left + 1, testArray.length - 1, total, target1, target2), 100)\n        } else{\n            setTimeout(() => findSum(left, right - 1, total, target1, target2), 100)       \n        }\n    }\n\n    useEffect(() => {\n        resetArray()\n    }, [])\n\n    return (\n        <div>\n            <div className={`flex items-center h-64 grid grid-cols-${rows} grid-flow-row gap-8`}>\n                {testArray.map((value, index) => {\n                    return <ArrayCircle value={value} index={index} />\n                })}\n            </div>\n            <button className=\"hover:bg-gray-200 rounded-xl p-1 float-right\" onClick={() => findSum()}>\n                Run\n            </button>\n        </div>\n    )\n}\n\nexport default MultiplePointers\n","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/Home.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Navbar.js",["72"],"import React, { useState } from 'react'\n\nconst Navbar = () => {\n\n    return (\n        <div className=\"h-screen items-center shadow-xl w-64\">\n            <svg className=\"w-8 h-8 rounded-md hover:bg-gray-100\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n            </svg>\n        </div>\n    )\n}\n\nexport default Navbar\n","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayCircle.js",[],["73","74"],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MergeSort.js",[],["75","76"],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayBar.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/helperMethods/MergeSort.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/helperMethods/HelperMethods.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/QuickSort.js",["77"],"import React, { useEffect, useState } from 'react'\nimport {resetArray} from '../helperMethods/HelperMethods'\nimport ArrayBar from './ArrayBar'\n// import { quickSort } from '../helperMethods/QuickSort'\n\nconst QuickSort = () => {\n\n    const [values, setValues] = useState([])\n    async function quickSort(arr, start, end) {\n        if (start >= end) {\n            return;\n        }\n        let index = await partition(arr, start, end);\n        document.getElementById(`bar-${index}`).style.backgroundColor = \"#D1D5DB\"\n        \n        await Promise.all([\n            quickSort(arr, start, index - 1),\n            quickSort(arr, index + 1, end)\n        ]);\n    }\n    \n    async function partition(arr, start, end) {\n        for (let i = start; i <= end; i++) {\n            document.getElementById(`bar-${i}`).style.backgroundColor = \"#D6FFB7\"\n        }\n        \n        let pivotValue = arr[end];\n        let pivotIndex = start;\n        document.getElementById(`bar-${pivotIndex}`).style.backgroundColor = \"#E0777D\"\n        for (let i = start; i < end; i++) {\n            if (arr[i] < pivotValue) {\n            await swap(arr, i, pivotIndex);\n            document.getElementById(`bar-${pivotIndex}`).style.backgroundColor = \"#D1D5DB\"\n            pivotIndex++;\n            document.getElementById(`bar-${pivotIndex}`).style.backgroundColor = \"#E0777D\"\n            }\n        }\n        await swap(arr, pivotIndex, end);\n        \n        for (let i = start; i < end; i++) {\n            if (i != pivotIndex) {\n                document.getElementById(`bar-${i}`).style.backgroundColor = \"#D1D5DB\"\n            }\n        }\n        \n        return pivotIndex;\n    }\n    \n    async function swap(arr, a, b) {\n        await sleep(750);\n        let temp = arr[a];\n        arr[a] = arr[b];\n        arr[b] = temp;\n        const element1 = document.getElementById(`bar-${a}`)\n        element1.style.height = `${arr[a]}px`\n        element1.innerHTML = arr[a]\n\n        const element2 = document.getElementById(`bar-${b}`)\n        element2.style.height = `${arr[b]}px`\n        element2.innerHTML = arr[b]\n    }\n    \n    function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    useEffect(() => {\n        setValues(resetArray())\n    }, [])\n\n    return (\n        <div className=\"flex flex-row\">\n            {values.map((value, index) => {\n                return <ArrayBar value={value} index={index} key={index}/>\n            })}\n            <button onClick={() => quickSort(values, 0, values.length - 1)}>\n                Run\n            </button>\n        </div>\n    )\n}\n\nexport default QuickSort\n",["78","79"],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/helperMethods/QuickSort.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/BubbleSort.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/SingleLinkedList.js",["80","81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":60,"column":8,"nodeType":"89","endLine":60,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"83","replacedBy":"95"},{"ruleId":"85","replacedBy":"96"},{"ruleId":"83","replacedBy":"97"},{"ruleId":"85","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":41,"column":19,"nodeType":"101","messageId":"102","endLine":41,"endColumn":21},{"ruleId":"83","replacedBy":"103"},{"ruleId":"85","replacedBy":"104"},{"ruleId":"91","severity":1,"message":"105","line":66,"column":7,"nodeType":"93","messageId":"94","endLine":66,"endColumn":23},{"ruleId":"91","severity":1,"message":"106","line":72,"column":18,"nodeType":"93","messageId":"94","endLine":72,"endColumn":25},{"ruleId":"87","severity":1,"message":"107","line":181,"column":8,"nodeType":"89","endLine":181,"endColumn":10,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetArray'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["109"],["110"],["109"],["110"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["109"],["110"],"'DoublyLinkedList' is defined but never used.","'setList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'list'. Either include it or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [resetArray]",{"range":"117","text":"118"},"Update the dependencies array to be: [list]",{"range":"119","text":"120"},[1930,1932],"[resetArray]",[5054,5056],"[list]"]