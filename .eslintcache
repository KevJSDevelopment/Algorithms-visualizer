[{"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/App.js":"1","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/index.js":"2","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Algorithms.js":"3","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MultiplePointers.js":"4","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/Home.js":"5","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Navbar.js":"6","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayCircle.js":"7","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MergeSort.js":"8","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayBar.js":"9"},{"size":370,"mtime":1611768353980,"results":"10","hashOfConfig":"11"},{"size":215,"mtime":1611677274000,"results":"12","hashOfConfig":"11"},{"size":757,"mtime":1611933770095,"results":"13","hashOfConfig":"11"},{"size":2423,"mtime":1611862184127,"results":"14","hashOfConfig":"11"},{"size":510,"mtime":1611933823399,"results":"15","hashOfConfig":"11"},{"size":476,"mtime":1611767006054,"results":"16","hashOfConfig":"11"},{"size":382,"mtime":1611861683724,"results":"17","hashOfConfig":"11"},{"size":2267,"mtime":1611940504863,"results":"18","hashOfConfig":"11"},{"size":271,"mtime":1611939310075,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1n5k89m",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/App.js",[],["40","41"],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/index.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Algorithms.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MultiplePointers.js",["42"],"import React, {useState, useEffect} from 'react'\nimport ArrayCircle from './ArrayCircle'\n\nconst MultiplePointers = () => {\n\n    const [testArray, setTestArray] = useState([])\n    const [rows, setRows] = useState(1)\n\n    const resetArray = () => {\n        const array = []\n        for(let i = 0; i < randomInt(10, 50); i++){\n            array.push(randomInt(20, 75))\n        }\n        setTestArray(array)\n        const rowNum = Math.floor(array.length / 5)\n        setRows(rowNum)\n    }\n\n    const randomInt = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n\n    const findSum = (left = 0, right = testArray.length - 1, total = 100, oldTarget1 = null, oldTarget2 = null) => {\n        \n        if(left >= testArray.length - 1){\n            return false\n        }\n\n        let sum = testArray[left] + testArray[right]\n\n        if(oldTarget1 !== null){\n            oldTarget1.style.backgroundColor = \"rgb(107, 114, 128)\"\n        }\n        if(oldTarget2 !== null){\n            oldTarget2.style.backgroundColor = \"rgb(107, 114, 128)\"\n        }\n\n        const target1 = document.getElementById(`circle-${left}`)\n        const target2 = document.getElementById(`circle-${right}`)\n\n        target1.style.backgroundColor = \"whitesmoke\"\n        target2.style.backgroundColor = \"whitesmoke\"\n\n        if(sum === total) {\n            const answer1 = document.getElementById(`circle-${left}`)\n            const answer2 = document.getElementById(`circle-${right}`)\n\n            answer1.style.backgroundColor = \"green\"\n            answer2.style.backgroundColor = \"green\"\n            return true\n        } else if(right <= left + 1){\n            setTimeout(() => findSum(left + 1, testArray.length - 1, total, target1, target2), 200)\n        } else{\n            setTimeout(() => findSum(left, right - 1, total, target1, target2), 200)       \n        }\n    }\n\n    useEffect(() => {\n        resetArray()\n    }, [])\n\n    return (\n        <div>\n            <div className={`flex items-center h-64 grid grid-cols-${rows} grid-flow-row gap-8`}>\n                {testArray.map((value, index) => {\n                    return <ArrayCircle value={value} index={index} />\n                })}\n            </div>\n            <button className=\"hover:bg-gray-200 rounded-xl p-1 float-right\" onClick={() => findSum()}>\n                Run\n            </button>\n        </div>\n    )\n}\n\nexport default MultiplePointers\n","/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/Home.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/containers/Navbar.js",["43"],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayCircle.js",[],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/MergeSort.js",["44"],"/Users/kevinsheehan/Documents/Projects/Algorithms/algorithms-visualizer/src/components/ArrayBar.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":60,"column":8,"nodeType":"51","endLine":60,"endColumn":10,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":54,"column":8,"nodeType":"51","endLine":54,"endColumn":10,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetArray'. Either include it or remove the dependency array.","ArrayExpression",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"62","fix":"64"},"Update the dependencies array to be: [resetArray]",{"range":"65","text":"66"},{"range":"67","text":"66"},[1930,1932],"[resetArray]",[1922,1924]]